{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 27,
  "lineage": "1e010262-cd4a-2127-3b66-c7aede306ada",
  "outputs": {
    "kong_deployment": {
      "value": "deployed",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.kong",
      "mode": "managed",
      "type": "helm_release",
      "name": "kong-enterprise-data-plane",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kong",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kong-enterprise-data-plane",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "3.3",
                "chart": "kong",
                "name": "kong-enterprise-data-plane",
                "namespace": "debugantoine",
                "revision": 1,
                "values": "{\"admin\":{\"enabled\":false},\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"kong-enterprise-data-plane-kong\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":5,\"metrics\":[{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":80,\"type\":\"Utilization\"}},\"type\":\"Resource\"}],\"minReplicas\":2,\"targetCPUUtilizationPercentage\":null},\"env\":{\"cluster_cert\":\"/etc/secrets/kong-cluster-cert/tls.crt\",\"cluster_cert_key\":\"/etc/secrets/kong-cluster-cert/tls.key\",\"cluster_control_plane\":\"cdd3ccbed2.eu.cp0.konghq.com:443\",\"cluster_mtls\":\"pki\",\"cluster_server_name\":\"cdd3ccbed2.eu.cp0.konghq.com\",\"cluster_telemetry_endpoint\":\"cdd3ccbed2.eu.tp0.konghq.com:443\",\"cluster_telemetry_server_name\":\"cdd3ccbed2.eu.tp0.konghq.com\",\"database\":\"off\",\"konnect_mode\":\"on\",\"lua_ssl_trusted_certificate\":\"system\",\"nginx_worker_processes\":\"auto\",\"role\":\"data_plane\",\"vitals\":\"off\"},\"image\":{\"repository\":\"kong/kong-gateway\",\"tag\":\"3.3.0.0\"},\"ingressController\":{\"enabled\":false,\"installCRDs\":false},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/status\",\"port\":\"status\",\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"podDisruptionBudget\":{\"enabled\":true,\"minAvailable\":\"50%\"},\"proxy\":{\"annotations\":{},\"enabled\":true,\"http\":{\"containerPort\":8000,\"enabled\":true,\"parameters\":[\"reuseport\"],\"servicePort\":80},\"labels\":{\"enable-metrics\":\"true\"},\"tls\":{\"containerPort\":8443,\"enabled\":true,\"parameters\":[\"http2\"],\"servicePort\":443},\"type\":\"ClusterIP\"},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/status\",\"port\":\"status\",\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"secretVolumes\":[\"kong-cluster-cert\"],\"serviceMonitor\":{\"enable\":false,\"enabled\":false,\"namespace\":\"kong\"},\"updateStrategy\":{}}",
                "version": "2.23.0"
              }
            ],
            "name": "kong-enterprise-data-plane",
            "namespace": "debugantoine",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.konghq.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "env.cluster_control_plane",
                "type": "",
                "value": "cdd3ccbed2.eu.cp0.konghq.com:443"
              },
              {
                "name": "env.cluster_server_name",
                "type": "",
                "value": "cdd3ccbed2.eu.cp0.konghq.com"
              },
              {
                "name": "env.cluster_telemetry_endpoint",
                "type": "",
                "value": "cdd3ccbed2.eu.tp0.konghq.com:443"
              },
              {
                "name": "env.cluster_telemetry_server_name",
                "type": "",
                "value": "cdd3ccbed2.eu.tp0.konghq.com"
              },
              {
                "name": "image.tag",
                "type": "",
                "value": "3.3.0.0"
              },
              {
                "name": "serviceMonitor.enable",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceMonitor.namespace",
                "type": "",
                "value": "kong"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Override namepsace for Kong chart resources. By default, the chart creates resources in the release namespace.\n# This may not be desirable when using this chart as a dependency.\n#namespace: \"kong\"\n\n# Specify Kong's Docker image and repository details here\nimage:\n  #repository: kong\n  # tag: \"2.7\" - set by tf (main.tf)\n  # Kong Enterprise\n  repository: kong/kong-gateway\n  # tag: \"2.7.0.0-alpine\" - set by tf (main.tf)\n  #tag: \"3.3\"\n\n# Inject specified secrets as a volume in Kong Container at path /etc/secrets/{secret-name}/\nsecretVolumes:\n- kong-cluster-cert\n\n# -----------------------------------------------------------------------------\n# Kong parameters\n# -----------------------------------------------------------------------------\n\n# Specify Kong configuration\n# This chart takes all entries defined under `.env` and transforms them into into `KONG_*`\n# environment variables for Kong containers.\n# Their names here should match the names used in https://github.com/Kong/kong/blob/master/kong.conf.default\n# See https://docs.konghq.com/latest/configuration also for additional details\n# Values here take precedence over values from other sections of values.yaml,\n# e.g. setting pg_user here will override the value normally set when postgresql.enabled\n# is set below. In general, you should not set values here if they are set elsewhere.\nenv:\n  role: data_plane\n  database: \"off\"\n  cluster_mtls: pki\n  # cluster_control_plane: dns_prefix.eu.cp0.konghq.com:443\n  # cluster_server_name: dns_prefix.eu.cp0.konghq.com\n  # cluster_telemetry_endpoint: dns_prefix.eu.tp0.konghq.com:443\n  # cluster_telemetry_server_name: dns_prefix.eu.tp0.konghq.com\n  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt\n  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key\n  lua_ssl_trusted_certificate: system\n  konnect_mode: \"on\"\n  vitals: \"off\"\n\n  nginx_worker_processes: \"auto\"\n\n  # proxy_access_log: /dev/stdout\n  # proxy_error_log: /dev/stderr\n  # prefix: /kong_prefix/\n  # proxy_listen: \"0.0.0.0:8000 proxy_protocol, 0.0.0.0:8443 ssl proxy_protocol\"\n  # trusted_ips: \"0.0.0.0/0,::/0\"\n  # real_ip_header: proxy_protocol\n  # ssl_cert: /etc/secrets/kong-tls/tls.crt\n  # ssl_cert_key: /etc/secrets/kong-tls/tls.key\n\n\n# Set admin.enabled true to issue kong admin api and manager certificate with cert-manager\nadmin:\n  enabled: false\n\n# Kong Ingress Controller's primary purpose is to satisfy Ingress resources\ningressController:\n  enabled: false\n  installCRDs: false\n\n# Specify Kong proxy service configuration\nproxy:\n  # Enable creating a Kubernetes service for the proxy\n  enabled: true\n  type: ClusterIP\n  # To specify annotations or labels for the proxy service, add them to the respective\n  # \"annotations\" or \"labels\" dictionaries below.\n  annotations: {}\n  \n  http:\n    # Enable plaintext HTTP listen for the proxy\n    enabled: true\n    servicePort: 80\n    containerPort: 8000\n    # Additional listen parameters, e.g. \"reuseport\", \"backlog=16384\"\n    parameters:\n      - reuseport\n\n  tls:\n    # Enable HTTPS listen for the proxy\n    enabled: true\n    servicePort: 443\n    containerPort: 8443\n    # Set a target port for the TLS port in proxy service\n    # overrideServiceTargetPort: 8000\n    # Additional listen parameters, e.g. \"reuseport\", \"backlog=16384\"\n    parameters:\n    - http2\n  \n  # Used as selector label if we enable service monitor via Kong Helm chart\n  labels:\n    enable-metrics: \"true\"\n\nserviceMonitor:\n  # Specifies whether ServiceMonitor for Prometheus operator should be created\n  # If you wish to gather metrics from a Kong instance with the proxy disabled (such as a hybrid control plane), see:\n  # https://github.com/Kong/charts/blob/main/charts/kong/README.md#prometheus-operator-integration\n  enabled: false\n  # interval: 10s\n  # Specifies namespace, where ServiceMonitor should be installed\n  # namespace: monitoring\n  # labels:\n  #   foo: bar\n  # targetLabels:\n  #   - foo\n\n  # honorLabels: false\n  # metricRelabelings: []\n  \n# update strategy\nupdateStrategy: {}\n  # type: RollingUpdate\n  # rollingUpdate:\n  #   maxSurge: \"100%\"\n  #   maxUnavailable: \"0%\n\n# readinessProbe for Kong pods\nreadinessProbe:\n  httpGet:\n    path: \"/status\"\n    port: status\n    scheme: HTTP\n  initialDelaySeconds: 5\n  timeoutSeconds: 5\n  periodSeconds: 10\n  successThreshold: 1\n  failureThreshold: 3\n\n# livenessProbe for Kong pods\nlivenessProbe:\n  httpGet:\n    path: \"/status\"\n    port: status\n    scheme: HTTP\n  initialDelaySeconds: 5\n  timeoutSeconds: 5\n  periodSeconds: 10\n  successThreshold: 1\n  failureThreshold: 3\n\n# Enable autoscaling using HorizontalPodAutoscaler\n# When configuring an HPA, you must set resource requests on all containers via\n# \"resources\" and, if using the controller, \"ingressController.resources\" in values.yaml\nautoscaling:\n  enabled: false\n  minReplicas: 2\n  maxReplicas: 5\n  ## targetCPUUtilizationPercentage only used if the cluster doesn't support autoscaling/v2beta\n  targetCPUUtilizationPercentage:\n  ## Otherwise for clusters that do support autoscaling/v2beta, use metrics\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        target:\n          type: Utilization\n          averageUtilization: 80\n\n# Kong Pod Disruption Budget\npodDisruptionBudget:\n  enabled: true\n  # Uncomment only one of the following when enabled is set to true\n  # maxUnavailable: \"50%\"\n  minAvailable: \"50%\"\n\n# Affinity for pod assignment\n# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\naffinity:\n  podAntiAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      - labelSelector:\n          matchExpressions:\n            - key: app\n              operator: In\n              values:\n                - kong-enterprise-data-plane-kong\n        topologyKey: \"kubernetes.io/hostname\""
            ],
            "verify": false,
            "version": "2.23.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kong.kubernetes_secret.kong-tls"
          ]
        }
      ]
    },
    {
      "module": "module.kong",
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "kong-tls",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "tls.crt": "-----BEGIN CERTIFICATE-----\nMIIDsDCCApqgAwIBAgIBATALBgkqhkiG9w0BAQ0wQjFAMAkGA1UEBhMCRVUwMwYD\nVQQDHiwAawBvAG4AbgBlAGMAdAAtAEsAbwBuAG4AZQBjAHQAXwBBAHAAaQBPAHAA\nczAeFw0yMzA2MDcxNjI5MjdaFw0zMzA2MDcxNjI5MjdaMEIxQDAJBgNVBAYTAkVV\nMDMGA1UEAx4sAGsAbwBuAG4AZQBjAHQALQBLAG8AbgBuAGUAYwB0AF8AQQBwAGkA\nTwBwAHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCz7QBzkmXh/bae\n4We6D2fXIjgi6lu2d3k8LOanE7iwB/Sfbyk/Ff3k2xUu9J09mLOeHHiFHdpRFky2\nw9u960Chtm62776HYg5Qm0X2QF3PW77ntgssso5+kINyUVLFSEI0HimoCTosrrIB\nYcsjiCpNkHssstFxJ6oZBA1qryO6eQmkJYKXkYd/KtFXUqIVhxFuYQadflud5qXu\nTzJAVePUj2ty6rMEXDPVRGZQynsawaZeRC7C7LfiajZYe6NYkqTb0BBUnqN87qNQ\ngk1QioJ4Np8s7kB0/RMJJxnLQJCMbrCWh5GKYMx5GeLHk8Rag583KnPUT2MuGk7o\n5sIRwlxlAgMBAAGjgbQwgbEwEgYDVR0TAQH/BAgwBgEB/wIBAzALBgNVHQ8EBAMC\nAAYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMBcGCSsGAQQBgjcUAgQK\nDAhjZXJ0VHlwZTAjBgkrBgEEAYI3FQIEFgQUAQEBAQEBAQEBAQEBAQEBAQEBAQEw\nHAYJKwYBBAGCNxUHBA8wDQYFKQEBAQECAQoCARQwEwYJKwYBBAGCNxUBBAYCBAAU\nAAowCwYJKoZIhvcNAQENA4IBAQBuLmyQt8C838q8j24y15lbz1kXwOnVcCido8Sj\nXeWbnzEyFBD+3oBF2g///LDX0vBtpXvtH02DvOo2uI04Hk3Nk0YsXvriDlek2HcX\nKFD7Vt69JfoRk8x4fPsZvj059I8b4yfpbEV33LnZvMyP4JWYh4hFh09DCcdJwoKv\nVTn9JoqRciK74cPvi7GJXpZE3+1qk/e+kE26TnBKp8Q0/TNVqePDAWH5rS/o8vNu\njCM+kPZ6tgy8xzebmyeHE91kPwcBEEp/t+uKkOdKAtpac+ukZa0QOVuGOeJ6rujl\nnihyTG8+hgVxZ26vu9zCJG8ZGvJod4Af/NDJ1w1bGBOBJUsH\n-----END CERTIFICATE-----\n",
              "tls.key": "-----BEGIN PRIVATE KEY-----\nMIIEuwIBADANBgkqhkiG9w0BAQEFAASCBKUwggShAgEAAoIBAQCz7QBzkmXh/bae\n4We6D2fXIjgi6lu2d3k8LOanE7iwB/Sfbyk/Ff3k2xUu9J09mLOeHHiFHdpRFky2\nw9u960Chtm62776HYg5Qm0X2QF3PW77ntgssso5+kINyUVLFSEI0HimoCTosrrIB\nYcsjiCpNkHssstFxJ6oZBA1qryO6eQmkJYKXkYd/KtFXUqIVhxFuYQadflud5qXu\nTzJAVePUj2ty6rMEXDPVRGZQynsawaZeRC7C7LfiajZYe6NYkqTb0BBUnqN87qNQ\ngk1QioJ4Np8s7kB0/RMJJxnLQJCMbrCWh5GKYMx5GeLHk8Rag583KnPUT2MuGk7o\n5sIRwlxlAgMBAAECgf8CsbR6sTaAASHllHp5JBc/TBk1wfdIRCxh5PTki5G4ZmYY\np7whCwiXj1rsg70sWZ0BlmuM6BAyJqNUw+9bvf9kbIGRO7B0AS6LBnLbEnD/1IqH\nQwfnzhn+yysstbWyPo1p5Qm6pRNkl+O9IY8TznYpCIDPqoh4U/UNatdzQYFyHqzD\nhPjt4KHKSxAvuFEvlMUNg7fPJK9aUKio8eIz8/dlgBlGxSQytboUN9BGSf6oVppJ\nCl6R5c8Ugh55GX56+CTwrjBqTnla/SF+969uirMOGyiFl7Y7+1jJIp6Bar6TAuMP\nuIMB1ueGQ2d94DPAeCnxoHc13cWaqx4x0CEg+b8CgYEA18Uo83GOsC5mZq0hF+MJ\nr8wb8SgIBI/ugAv+b8qlbzpA0Xc8+DI1AlK7TMApzGUtU7DIUTRCEIUKb3MXThun\nZaH8EKM9R7G1Ni0d64lu7BNXibm8M1tioeJMQLRbuLcQ5l23IDG6eOfFpu4Gp4gz\nv+BgNZJb8sNXrGFgkmDk25MCgYEA1Xj3659XzB4cHhzYQpJT0x/7WOLmCWcCgJib\nw7hA+Rb14IoBIR7eSr3eMFIfZFyOEsVQJBinnbd+/8upT+ZSOiQkaJtowEgkFRzS\ntmoHsVB3yh+oAmW2amrWEninoMRKHmlF/fNIDr3ITDYnH23P8ENg+zbpfYUBts7q\n++yjEycCgYB2KYC9oOiVTzPA8vr2i90YKtz6egO6C+B+uxLBweZLPUmV7Ii1Gzmw\nZgIwi+PYDWh/NobdAZNUXKdUVWDj430OyWCy89JxWr50Rszl2kOmgQklYVPRhDBF\nmxpLLPo18/sLTTMmLFWENNknC58VTB+a6pOFgvtbvOJcgo9SWkG6hQKBgGcJoZkA\na29hpS6/u36+hGlmiXqI4oHtT57kimK4/9t7Qqjj09G5xZAL/0ARk4dsyUK0LI+P\nuu/8jvdGxW2EfXIE2fIH+VK+P3RVWjukCByE+5z7FKw7jgXllXiK9lY6CJCPPbJr\nB//diN2IUe/woCqXSytWgPMODRrA21lIChqHAoGBAIQBDth7dL+eVxtQVi2NAYjS\n6HoMCfFTYMvOQ9KznAVtNb5t51qp1fPgcpMqF4o33dv/P2fp4VqVnBwaMDfxJYTY\nbsThgGEXpZGGPfZyAsRCcqYUbjOED2qN3qzBHi/unyHP53erLA+12wAdOoQ/z9Hk\nQ+wvTyqFHLTAD8oCXPiD\n-----END PRIVATE KEY-----\n"
            },
            "id": "debugantoine/kong-tls",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "app.kubernetes.io/managed-by": "Terraform"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "Terraform"
                },
                "name": "kong-tls",
                "namespace": "debugantoine",
                "resource_version": "203526",
                "uid": "a4dca629-1286-4605-b526-66146f002c4b"
              }
            ],
            "timeouts": null,
            "type": "kubernetes.io/tls",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": null
}
